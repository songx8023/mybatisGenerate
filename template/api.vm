package com.control.situation.api;

import com.xubei.framework.common.constants.ApiGateConstants;
import com.xubei.framework.common.entity.Pager;
import com.xubei.framework.common.entity.ResponseObj;
import io.swagger.annotations.ApiOperation;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

/**
 * 内部模块访问接口
 *
 * @author:${author}
 * @date:${datetime}
 */
@FeignClient(value = ServiceName.VALUE)
public interface ${table.className}Api {

    /**
     * 新增
     *
     * @param ${table.classNameFirstLower}
     * @return
     */
    @ApiOperation(value = "新增")
    @RequestMapping(value = ApiGateConstants.PATH_INNER + "/${table.classNameFirstLower}/save", method = RequestMethod.POST,
            consumes = MediaType.APPLICATION_JSON_VALUE)
    ResponseObj save(@RequestBody ${table.className} ${table.classNameFirstLower});

    /**
     * 修改
     *
     * @param ${table.classNameFirstLower}
     * @return
     */
    @ApiOperation(value = "修改")
    @RequestMapping(value = ApiGateConstants.PATH_INNER + "/${table.classNameFirstLower}/update", method = RequestMethod.POST,
            consumes = MediaType.APPLICATION_JSON_VALUE)
    ResponseObj update(@RequestBody ${table.className} ${table.classNameFirstLower});

    /**
     * 根据ID查询
     *
     * @param id
     * @return
     */
    @ApiOperation(value = "根据ID查询")
    @RequestMapping(value = ApiGateConstants.PATH_INNER + "/${table.classNameFirstLower}/getById", method = RequestMethod.GET)
    ResponseObj<${table.className}> getById(@RequestParam("id") Long id);

    /**
     * 分页查询
     *
     * @param queryDTO
     * @return
     */
    @ApiOperation(value = "分页查询")
    @RequestMapping(value = ApiGateConstants.PATH_INNER + "/${table.classNameFirstLower}/page", method = RequestMethod.POST,
            consumes = MediaType.APPLICATION_JSON_VALUE)
    ResponseObj<Pager<${table.className}>> page(@RequestBody ${table.className}QueryDTO queryDTO);

}
